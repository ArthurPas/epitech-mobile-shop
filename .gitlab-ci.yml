stages:
  - lint
  - test
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  COMPOSE_PROJECT_NAME: gitlab_ci

lint:
  stage: lint
  image: node:23
  before_script:
    - curl -Ls https://cli.doppler.com/install.sh | sh
    - echo "DOPPLER_TOKEN=$DOPPLER_TOKEN"
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702
    - doppler run --config dev -- npm ci
  script:
    - npm run lint
  only:
    - merge_requests
    - main
  tags:
    - docker

test:
  stage: test
  image: node:23
  services:
    - name: postgres:16
      alias: db  # On continue d'utiliser l'alias db pour la connexion
  variables:
    # Variables d'environnement pour la base de données, fournies par Doppler
    DATABASE_URL: postgres://$PG_USER:$PG_PASSWORD@db:5432/$PG_DB
    POSTGRES_USER: $PG_USER
    POSTGRES_PASSWORD: $PG_PASSWORD
    POSTGRES_DB: $PG_DB
  before_script:
    - curl -Ls https://cli.doppler.com/install.sh | sh  # Installer Doppler CLI
    - doppler configure --token $DOPPLER_TOKEN --scope t-dev-702  # Configurer Doppler
    - doppler run --config dev -- docker-compose up -d db  # Lancer Postgres via Docker Compose
    - sleep 10  # Attendre que le service Postgres soit prêt
    - docker-compose ps  # Vérifier l'état des services
  script:
    - doppler run --config dev -- npm ci  # Installer les dépendances
    - doppler run --config dev -- npm run test  # Lancer les tests
  after_script:
    - docker-compose down -v  # Nettoyer les containers
  only:
    - merge_requests
    - main
  tags:
    - docker

build:
  stage: build
  image: node:23
  before_script:
    - doppler run -- npm ci
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
  only:
    - main
  tags:
    - docker

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - doppler run -- docker-compose build app
  script:
    - doppler run -- docker-compose up -d
  after_script:
    - docker-compose down
  only:
    - main
  tags:
    - docker

# test ci pour partie "test"